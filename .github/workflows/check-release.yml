name: Check Release

on:
  pull_request

env:
  IMPORTER_DIR: ./Migrators/Importer
  ALLURE_DIR: ./Migrators/AllureExporter
  AZURE_DIR: ./Migrators/AzureExporter
  ZEPHYR_SCALE_DIR: ./Migrators/ZephyrScaleExporter
  ZEPHYR_SCALE_SERVER_DIR: ./Migrators/ZephyrScaleServerExporter/ZephyrScaleServerExporter
  ZEPHYR_SQUAD_DIR: ./Migrators/ZephyrSquadExporter
  ZEPHYR_SQUAD_SERVER_DIR: ./Migrators/ZephyrSquadServerExporter
  XRAY_DIR: ./Migrators/XRayExporter
  TESTCOLLAB_DIR: ./Migrators/TestCollabExporter
  TESTLINK_DIR: ./Migrators/TestLinkExporter
  TESTRAIL_DIR: ./Migrators/TestRailExporter
  TESTRAIL_XML_DIR: ./Migrators/TestRailXmlExporter
  PRACTITEST_DIR: ./Migrators/PractiTestExporter
  SPIRA_DIR: ./Migrators/SpiraTestExporter
  HPALM_DIR: ./Migrators/HPALMExporter
  QASE_DIR: ./Migrators/QaseExporter

jobs:
  importer_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: Importer.exe
            asset_name: Importer-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: Importer
            asset_name: Importer-linux-x64-TEST
          # disabled  
          # - os: osx-x64
          #   artifact_name: Importer
          #   asset_name: Importer-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8

      - name: Restore dependencies
        run: dotnet restore ${{ env.IMPORTER_DIR }}

      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.IMPORTER_DIR }} 

  
          
  allure_build:
    needs: importer_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: AllureExporter.exe
            asset_name: AllureExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: AllureExporter
            asset_name: AllureExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: AllureExporter
          #   asset_name: AllureExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.ALLURE_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.ALLURE_DIR }} 
        
      
  azure_build:
    needs: allure_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: AzureExporter.exe
            asset_name: AzureExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: AzureExporter
            asset_name: AzureExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: AzureExporter
          #   asset_name: AzureExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.AZURE_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.AZURE_DIR }} 
                

  zephyr_scale_build:
    needs: azure_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: ZephyrScaleExporter.exe
            asset_name: ZephyrScaleExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: ZephyrScaleExporter
            asset_name: ZephyrScaleExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: ZephyrScaleExporter
          #   asset_name: ZephyrScaleExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.ZEPHYR_SCALE_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.ZEPHYR_SCALE_DIR }} 
                

  zephyr_scale_server_build:
    needs: zephyr_scale_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: ZephyrScaleServerExporter.exe
            asset_name: ZephyrScaleServerExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: ZephyrScaleServerExporter
            asset_name: ZephyrScaleServerExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: ZephyrScaleServerExporter
          #   asset_name: ZephyrScaleServerExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.ZEPHYR_SCALE_SERVER_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.ZEPHYR_SCALE_SERVER_DIR }} 
                

  zephyr_squad_build:
    needs: zephyr_scale_server_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: ZephyrSquadExporter.exe
            asset_name: ZephyrSquadExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: ZephyrSquadExporter
            asset_name: ZephyrSquadExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: ZephyrSquadExporter
          #   asset_name: ZephyrSquadExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.ZEPHYR_SQUAD_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.ZEPHYR_SQUAD_DIR }} 
                   

  zephyr_squad_server_build:
    needs: zephyr_squad_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: ZephyrSquadServerExporter.exe
            asset_name: ZephyrSquadServerExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: ZephyrSquadServerExporter
            asset_name: ZephyrSquadServerExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: ZephyrSquadServerExporter
          #   asset_name: ZephyrSquadServerExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.ZEPHYR_SQUAD_SERVER_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.ZEPHYR_SQUAD_SERVER_DIR }} 
                   

  xray_build:
    needs: zephyr_squad_server_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: XRayExporter.exe
            asset_name: XRayExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: XRayExporter
            asset_name: XRayExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: XRayExporter
          #   asset_name: XRayExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.XRAY_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.XRAY_DIR }} 
             

  testlink_build:
    needs: xray_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: TestLinkExporter.exe
            asset_name: TestLinkExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: TestLinkExporter
            asset_name: TestLinkExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: TestLinkExporter
          #   asset_name: TestLinkExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.TESTLINK_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.TESTLINK_DIR }} 
                          

  testrail_build:
    needs: importer_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: TestRailExporter.exe
            asset_name: TestRailExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: TestRailExporter
            asset_name: TestRailExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: TestRailExporter
          #   asset_name: TestRailExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.TESTRAIL_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.TESTRAIL_DIR }} 
           
          
  testrail_xml_build:
    needs: testrail_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: TestRailXmlExporter.exe
            asset_name: TestRailXmlExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: TestRailXmlExporter
            asset_name: TestRailXmlExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: TestRailXmlExporter
          #   asset_name: TestRailXmlExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.TESTRAIL_XML_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.TESTRAIL_XML_DIR }} 
           

  testcollab_build:
    needs: testlink_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: TestCollabExporter.exe
            asset_name: TestCollabExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: TestCollabExporter
            asset_name: TestCollabExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: TestCollabExporter
          #   asset_name: TestCollabExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.TESTCOLLAB_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.TESTCOLLAB_DIR }} 
                                    

  practitest_build:
    needs: testcollab_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: PractiTestExporter.exe
            asset_name: PractiTestExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: PractiTestExporter
            asset_name: PractiTestExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: PractiTestExporter
          #   asset_name: PractiTestExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.PRACTITEST_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.PRACTITEST_DIR }} 
        

  spiratest_build:
    needs: practitest_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: SpiraTestExporter.exe
            asset_name: SpiraTestExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: SpiraTestExporter
            asset_name: SpiraTestExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: SpiraTestExporter
          #   asset_name: SpiraTestExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.SPIRA_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.SPIRA_DIR }} 
        

  hpalm_build:
    needs: spiratest_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: HPALMExporter.exe
            asset_name: HPALMExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: HPALMExporter
            asset_name: HPALMExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: HPALMExporter
          #   asset_name: HPALMExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.HPALM_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.HPALM_DIR }} 
                
  
  qase_build:
    needs: hpalm_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: win-x64
            artifact_name: QaseExporter.exe
            asset_name: QaseExporter-win-x64-TEST.exe
          - os: linux-x64
            artifact_name: QaseExporter
            asset_name: QaseExporter-linux-x64-TEST
          # - os: osx-x64
          #   artifact_name: QaseExporter
          #   asset_name: QaseExporter-osx-x64-TEST
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.QASE_DIR }}
        
      - name: Publish project
        run: |
          dotnet publish \
          -r ${{ matrix.os }} \
          --configuration Release \
          --self-contained true \
          --output ./publish \
          --no-restore ${{ env.QASE_DIR }} 
          